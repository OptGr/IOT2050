"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.getPasskeyForUnitTest = exports.errorHelper = exports.sleep = exports.mochaAsync = void 0;
const mochaAsync = (fn) => {
    return (done) => {
        fn.call().then(done, (err) => {
            done(err);
        });
    };
};
exports.mochaAsync = mochaAsync;
const sleep = (ms) => new Promise((resolve) => setTimeout(resolve, ms));
exports.sleep = sleep;
const errorHelper = (fn) => __awaiter(void 0, void 0, void 0, function* () {
    let errorOccured = false;
    try {
        yield fn();
    }
    catch (err) {
        errorOccured = true;
    }
    return errorOccured;
});
exports.errorHelper = errorHelper;
/**
 * passkey for unit tests. if the environment variable is not set it is using the default passkey.
 *
 * @export
 * @returns {string}
 */
function getPasskeyForUnitTest() {
    if (!process.env.MDSP_PASSKEY) {
        console.error("--------------------------------------------------------------------------------------------");
        console.error("\x1b[31m%s\x1b[0m", "\nPlease set the MDSP_PASSKEY environment variable for your passkey before running unit tests.");
        console.error("\nsee: https://opensource.mindsphere.io/docs/mindconnect-nodejs/cli/setting-up-the-cli.html\n");
        console.error("--------------------------------------------------------------------------------------------");
        process.exit(-1);
    }
    return process.env.MDSP_PASSKEY;
}
exports.getPasskeyForUnitTest = getPasskeyForUnitTest;
//# sourceMappingURL=test-utils.js.map