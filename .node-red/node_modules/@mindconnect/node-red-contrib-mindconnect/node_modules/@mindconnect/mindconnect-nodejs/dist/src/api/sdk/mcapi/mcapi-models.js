"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.MindConnectApiModels = void 0;
var MindConnectApiModels;
(function (MindConnectApiModels) {
    /**
     *
     * @export
     * @class RequiredError
     * @extends {Error}
     */
    class RequiredError extends Error {
        constructor(field, msg) {
            super(msg);
            this.field = field;
            this.name = "RequiredError";
        }
    }
    MindConnectApiModels.RequiredError = RequiredError;
    /**
     * @export
     * @namespace DiagnosticActivation
     */
    let DiagnosticActivation;
    (function (DiagnosticActivation) {
        /**
         * @export
         * @enum {string}
         */
        let StatusEnum;
        (function (StatusEnum) {
            StatusEnum[StatusEnum["ACTIVE"] = "ACTIVE"] = "ACTIVE";
            StatusEnum[StatusEnum["INACTIVE"] = "INACTIVE"] = "INACTIVE";
        })(StatusEnum = DiagnosticActivation.StatusEnum || (DiagnosticActivation.StatusEnum = {}));
    })(DiagnosticActivation = MindConnectApiModels.DiagnosticActivation || (MindConnectApiModels.DiagnosticActivation = {}));
    /**
     * @export
     * @namespace DiagnosticActivationStatus
     */
    let DiagnosticActivationStatus;
    (function (DiagnosticActivationStatus) {
        /**
         * @export
         * @enum {string}
         */
        let StatusEnum;
        (function (StatusEnum) {
            StatusEnum[StatusEnum["ACTIVE"] = "ACTIVE"] = "ACTIVE";
            StatusEnum[StatusEnum["INACTIVE"] = "INACTIVE"] = "INACTIVE";
        })(StatusEnum = DiagnosticActivationStatus.StatusEnum || (DiagnosticActivationStatus.StatusEnum = {}));
    })(DiagnosticActivationStatus = MindConnectApiModels.DiagnosticActivationStatus || (MindConnectApiModels.DiagnosticActivationStatus = {}));
    /**
     * @export
     * @namespace DiagnosticInformation
     */
    let DiagnosticInformation;
    (function (DiagnosticInformation) {
        /**
         * @export
         * @enum {string}
         */
        let SeverityEnum;
        (function (SeverityEnum) {
            SeverityEnum[SeverityEnum["INFO"] = "INFO"] = "INFO";
            SeverityEnum[SeverityEnum["WARN"] = "WARN"] = "WARN";
            SeverityEnum[SeverityEnum["ERROR"] = "ERROR"] = "ERROR";
        })(SeverityEnum = DiagnosticInformation.SeverityEnum || (DiagnosticInformation.SeverityEnum = {}));
        /**
         * @export
         * @enum {string}
         */
        let StateEnum;
        (function (StateEnum) {
            StateEnum[StateEnum["ACCEPTED"] = "ACCEPTED"] = "ACCEPTED";
            StateEnum[StateEnum["RETRYING"] = "RETRYING"] = "RETRYING";
            StateEnum[StateEnum["DROPPED"] = "DROPPED"] = "DROPPED";
            StateEnum[StateEnum["PROCESSING"] = "PROCESSING"] = "PROCESSING";
            StateEnum[StateEnum["FINISHED"] = "FINISHED"] = "FINISHED";
        })(StateEnum = DiagnosticInformation.StateEnum || (DiagnosticInformation.StateEnum = {}));
    })(DiagnosticInformation = MindConnectApiModels.DiagnosticInformation || (MindConnectApiModels.DiagnosticInformation = {}));
    /**
     * @export
     * @namespace DiagnosticInformationMessage
     */
    let DiagnosticInformationMessage;
    (function (DiagnosticInformationMessage) {
        /**
         * @export
         * @enum {string}
         */
        let SeverityEnum;
        (function (SeverityEnum) {
            SeverityEnum[SeverityEnum["INFO"] = "INFO"] = "INFO";
            SeverityEnum[SeverityEnum["WARN"] = "WARN"] = "WARN";
            SeverityEnum[SeverityEnum["ERROR"] = "ERROR"] = "ERROR";
        })(SeverityEnum = DiagnosticInformationMessage.SeverityEnum || (DiagnosticInformationMessage.SeverityEnum = {}));
        /**
         * @export
         * @enum {string}
         */
        let StateEnum;
        (function (StateEnum) {
            StateEnum[StateEnum["ACCEPTED"] = "ACCEPTED"] = "ACCEPTED";
            StateEnum[StateEnum["RETRYING"] = "RETRYING"] = "RETRYING";
            StateEnum[StateEnum["DROPPED"] = "DROPPED"] = "DROPPED";
            StateEnum[StateEnum["PROCESSING"] = "PROCESSING"] = "PROCESSING";
            StateEnum[StateEnum["FINISHED"] = "FINISHED"] = "FINISHED";
        })(StateEnum = DiagnosticInformationMessage.StateEnum || (DiagnosticInformationMessage.StateEnum = {}));
    })(DiagnosticInformationMessage = MindConnectApiModels.DiagnosticInformationMessage || (MindConnectApiModels.DiagnosticInformationMessage = {}));
    /**
     * @export
     * @namespace Mapping
     */
    let Mapping;
    (function (Mapping) {
        /**
         * @export
         * @enum {string}
         */
        let DataPointTypeEnum;
        (function (DataPointTypeEnum) {
            DataPointTypeEnum[DataPointTypeEnum["INT"] = "INT"] = "INT";
            DataPointTypeEnum[DataPointTypeEnum["LONG"] = "LONG"] = "LONG";
            DataPointTypeEnum[DataPointTypeEnum["DOUBLE"] = "DOUBLE"] = "DOUBLE";
            DataPointTypeEnum[DataPointTypeEnum["BOOLEAN"] = "BOOLEAN"] = "BOOLEAN";
            DataPointTypeEnum[DataPointTypeEnum["STRING"] = "STRING"] = "STRING";
            DataPointTypeEnum[DataPointTypeEnum["BIGSTRING"] = "BIG_STRING"] = "BIGSTRING";
            DataPointTypeEnum[DataPointTypeEnum["TIMESTAMP"] = "TIMESTAMP"] = "TIMESTAMP";
        })(DataPointTypeEnum = Mapping.DataPointTypeEnum || (Mapping.DataPointTypeEnum = {}));
        /**
         * @export
         * @enum {string}
         */
        let PropertyTypeEnum;
        (function (PropertyTypeEnum) {
            PropertyTypeEnum[PropertyTypeEnum["INT"] = "INT"] = "INT";
            PropertyTypeEnum[PropertyTypeEnum["LONG"] = "LONG"] = "LONG";
            PropertyTypeEnum[PropertyTypeEnum["DOUBLE"] = "DOUBLE"] = "DOUBLE";
            PropertyTypeEnum[PropertyTypeEnum["BOOLEAN"] = "BOOLEAN"] = "BOOLEAN";
            PropertyTypeEnum[PropertyTypeEnum["STRING"] = "STRING"] = "STRING";
            PropertyTypeEnum[PropertyTypeEnum["BIGSTRING"] = "BIG_STRING"] = "BIGSTRING";
            PropertyTypeEnum[PropertyTypeEnum["TIMESTAMP"] = "TIMESTAMP"] = "TIMESTAMP";
        })(PropertyTypeEnum = Mapping.PropertyTypeEnum || (Mapping.PropertyTypeEnum = {}));
    })(Mapping = MindConnectApiModels.Mapping || (MindConnectApiModels.Mapping = {}));
    /**
     * @export
     * @namespace Order
     */
    let Order;
    (function (Order) {
        /**
         * @export
         * @enum {string}
         */
        let DirectionEnum;
        (function (DirectionEnum) {
            DirectionEnum[DirectionEnum["ASC"] = "ASC"] = "ASC";
            DirectionEnum[DirectionEnum["DESC"] = "DESC"] = "DESC";
        })(DirectionEnum = Order.DirectionEnum || (Order.DirectionEnum = {}));
        /**
         * @export
         * @enum {string}
         */
        let NullHandlingEnum;
        (function (NullHandlingEnum) {
            NullHandlingEnum[NullHandlingEnum["NATIVE"] = "NATIVE"] = "NATIVE";
            NullHandlingEnum[NullHandlingEnum["NULLSFIRST"] = "NULLS_FIRST"] = "NULLSFIRST";
            NullHandlingEnum[NullHandlingEnum["NULLSLAST"] = "NULLS_LAST"] = "NULLSLAST";
        })(NullHandlingEnum = Order.NullHandlingEnum || (Order.NullHandlingEnum = {}));
    })(Order = MindConnectApiModels.Order || (MindConnectApiModels.Order = {}));
    /**
     * @export
     * @namespace Validity
     */
    let Validity;
    (function (Validity) {
        /**
         * @export
         * @enum {string}
         */
        let StatusEnum;
        (function (StatusEnum) {
            StatusEnum[StatusEnum["VALID"] = "VALID"] = "VALID";
            StatusEnum[StatusEnum["INVALID"] = "INVALID"] = "INVALID";
        })(StatusEnum = Validity.StatusEnum || (Validity.StatusEnum = {}));
        /**
         * @export
         * @enum {string}
         */
        let ReasonsEnum;
        (function (ReasonsEnum) {
            ReasonsEnum[ReasonsEnum["MISSINGDATAPOINT"] = "MISSING_DATAPOINT"] = "MISSINGDATAPOINT";
            ReasonsEnum[ReasonsEnum["MISSINGPROPERTY"] = "MISSING_PROPERTY"] = "MISSINGPROPERTY";
            ReasonsEnum[ReasonsEnum["INVALIDTYPE"] = "INVALID_TYPE"] = "INVALIDTYPE";
            ReasonsEnum[ReasonsEnum["INVALIDUNIT"] = "INVALID_UNIT"] = "INVALIDUNIT";
        })(ReasonsEnum = Validity.ReasonsEnum || (Validity.ReasonsEnum = {}));
    })(Validity = MindConnectApiModels.Validity || (MindConnectApiModels.Validity = {}));
})(MindConnectApiModels = exports.MindConnectApiModels || (exports.MindConnectApiModels = {}));
//# sourceMappingURL=mcapi-models.js.map