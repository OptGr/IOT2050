"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const console_1 = require("console");
const version_1 = require("../../version");
const command_utils_1 = require("./command-utils");
const magenta = (0, command_utils_1.getColor)("magenta");
const cyan = (0, command_utils_1.getColor)("cyan");
const green = (0, command_utils_1.getColor)("green");
const red = (0, command_utils_1.getColor)("red");
const blue = (0, command_utils_1.getColor)("blue");
const yellow = (0, command_utils_1.getColor)("yellow");
exports.default = (program) => {
    program.version(`MindSphere CLI (mc, mdsp) - Version: ${version_1.MC_VERSION}`);
    program.on("--help", () => {
        (0, console_1.log)(`\n  Documentation:\n`);
        (0, console_1.log)(`    the ${magenta("magenta colored commands *")} use app or service credentials or borrowed mindsphere cookies`);
        (0, console_1.log)(`    the ${cyan("cyan colored commands ")}require mindconnectlib (agent) credentials`);
        (0, console_1.log)(`    the ${blue("blue colored commands @")} use analytical functions of MindSphere`);
        (0, console_1.log)(`    the ${green("green colored commands #")} are used as setup and utility commands`);
        (0, console_1.log)(`    the ${yellow("yellow colored commands &")} use borrowed mindsphere application cookies`);
        (0, console_1.log)(`    the credentials and cookies should only be used in secure environments`);
        (0, console_1.log)(`    Full documentation: ${cyan("https://opensource.mindsphere.io")}\n`);
        (0, command_utils_1.checkForUpdates)();
    });
    program.on("command:*", function () {
        console.error(red(`Invalid command: ${program.args.join(" ")}`));
        console.error("Use mc --help for a list of available commands");
        process.exit(1);
    });
};
//# sourceMappingURL=mc-version-help.js.map