"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.SemanticDataInterconnectModels = void 0;
var SemanticDataInterconnectModels;
(function (SemanticDataInterconnectModels) {
    /**
     *
     * @export
     * @class RequiredError
     * @extends {Error}
     */
    class RequiredError extends Error {
        constructor(field, msg) {
            super(msg);
            this.field = field;
            this.name = "RequiredError";
        }
    }
    SemanticDataInterconnectModels.RequiredError = RequiredError;
    /**
     * @export
     * @namespace CreateDataLakeRequest
     */
    let CreateDataLakeRequest;
    (function (CreateDataLakeRequest) {
        /**
         * @export
         * @enum {string}
         */
        let TypeEnum;
        (function (TypeEnum) {
            TypeEnum[TypeEnum["MindSphere"] = "MindSphere"] = "MindSphere";
            TypeEnum[TypeEnum["Custom"] = "Custom"] = "Custom";
        })(TypeEnum = CreateDataLakeRequest.TypeEnum || (CreateDataLakeRequest.TypeEnum = {}));
    })(CreateDataLakeRequest = SemanticDataInterconnectModels.CreateDataLakeRequest || (SemanticDataInterconnectModels.CreateDataLakeRequest = {}));
    /**
     * @export
     * @namespace CreateDataLakeResponse
     */
    let CreateDataLakeResponse;
    (function (CreateDataLakeResponse) {
        /**
         * @export
         * @enum {string}
         */
        let TypeEnum;
        (function (TypeEnum) {
            TypeEnum[TypeEnum["MindSphere"] = "MindSphere"] = "MindSphere";
            TypeEnum[TypeEnum["Custom"] = "Custom"] = "Custom";
        })(TypeEnum = CreateDataLakeResponse.TypeEnum || (CreateDataLakeResponse.TypeEnum = {}));
    })(CreateDataLakeResponse = SemanticDataInterconnectModels.CreateDataLakeResponse || (SemanticDataInterconnectModels.CreateDataLakeResponse = {}));
    /**
     * @export
     * @namespace CreateDataRegistryRequest
     */
    let CreateDataRegistryRequest;
    (function (CreateDataRegistryRequest) {
        /**
         * @export
         * @enum {string}
         */
        let FileUploadStrategyEnum;
        (function (FileUploadStrategyEnum) {
            FileUploadStrategyEnum[FileUploadStrategyEnum["Append"] = "append"] = "Append";
            FileUploadStrategyEnum[FileUploadStrategyEnum["Replace"] = "replace"] = "Replace";
        })(FileUploadStrategyEnum = CreateDataRegistryRequest.FileUploadStrategyEnum || (CreateDataRegistryRequest.FileUploadStrategyEnum = {}));
    })(CreateDataRegistryRequest = SemanticDataInterconnectModels.CreateDataRegistryRequest || (SemanticDataInterconnectModels.CreateDataRegistryRequest = {}));
    /**
     * @export
     * @namespace DataQueryExecutionResponse
     */
    let DataQueryExecutionResponse;
    (function (DataQueryExecutionResponse) {
        /**
         * @export
         * @enum {string}
         */
        let StatusEnum;
        (function (StatusEnum) {
            StatusEnum[StatusEnum["CURRENT"] = "CURRENT"] = "CURRENT";
            StatusEnum[StatusEnum["INPROGRESS"] = "IN_PROGRESS"] = "INPROGRESS";
            StatusEnum[StatusEnum["OUTDATED"] = "OUTDATED"] = "OUTDATED";
            StatusEnum[StatusEnum["FAILED"] = "FAILED"] = "FAILED";
            StatusEnum[StatusEnum["OBSOLETE"] = "OBSOLETE"] = "OBSOLETE";
        })(StatusEnum = DataQueryExecutionResponse.StatusEnum || (DataQueryExecutionResponse.StatusEnum = {}));
    })(DataQueryExecutionResponse = SemanticDataInterconnectModels.DataQueryExecutionResponse || (SemanticDataInterconnectModels.DataQueryExecutionResponse = {}));
    /**
     * @export
     * @namespace DataRegistry
     */
    let DataRegistry;
    (function (DataRegistry) {
        /**
         * @export
         * @enum {string}
         */
        let FileUploadStrategyEnum;
        (function (FileUploadStrategyEnum) {
            FileUploadStrategyEnum[FileUploadStrategyEnum["Append"] = "append"] = "Append";
            FileUploadStrategyEnum[FileUploadStrategyEnum["Replace"] = "replace"] = "Replace";
        })(FileUploadStrategyEnum = DataRegistry.FileUploadStrategyEnum || (DataRegistry.FileUploadStrategyEnum = {}));
    })(DataRegistry = SemanticDataInterconnectModels.DataRegistry || (SemanticDataInterconnectModels.DataRegistry = {}));
    /**
     * @export
     * @namespace InputClass
     */
    let InputClass;
    (function (InputClass) {
        /**
         * @export
         * @enum {string}
         */
        let KeyMappingTypeEnum;
        (function (KeyMappingTypeEnum) {
            KeyMappingTypeEnum[KeyMappingTypeEnum["INNERJOIN"] = "INNER JOIN"] = "INNERJOIN";
            KeyMappingTypeEnum[KeyMappingTypeEnum["FULLOUTERJOIN"] = "FULL OUTER JOIN"] = "FULLOUTERJOIN";
        })(KeyMappingTypeEnum = InputClass.KeyMappingTypeEnum || (InputClass.KeyMappingTypeEnum = {}));
    })(InputClass = SemanticDataInterconnectModels.InputClass || (SemanticDataInterconnectModels.InputClass = {}));
    /**
     * @export
     * @namespace IotDataRegistryResponse
     */
    let IotDataRegistryResponse;
    (function (IotDataRegistryResponse) {
        /**
         * @export
         * @enum {string}
         */
        let FileUploadStrategyEnum;
        (function (FileUploadStrategyEnum) {
            FileUploadStrategyEnum[FileUploadStrategyEnum["Append"] = "append"] = "Append";
            FileUploadStrategyEnum[FileUploadStrategyEnum["Replace"] = "replace"] = "Replace";
        })(FileUploadStrategyEnum = IotDataRegistryResponse.FileUploadStrategyEnum || (IotDataRegistryResponse.FileUploadStrategyEnum = {}));
    })(IotDataRegistryResponse = SemanticDataInterconnectModels.IotDataRegistryResponse || (SemanticDataInterconnectModels.IotDataRegistryResponse = {}));
    /**
     * @export
     * @namespace JobStatus
     */
    let JobStatus;
    (function (JobStatus) {
        /**
         * @export
         * @enum {string}
         */
        let StatusEnum;
        (function (StatusEnum) {
            StatusEnum[StatusEnum["SUBMITTED"] = "SUBMITTED"] = "SUBMITTED";
            StatusEnum[StatusEnum["INPROGRESS"] = "IN_PROGRESS"] = "INPROGRESS";
            StatusEnum[StatusEnum["ERROR"] = "ERROR"] = "ERROR";
            StatusEnum[StatusEnum["SUCCESS"] = "SUCCESS"] = "SUCCESS";
        })(StatusEnum = JobStatus.StatusEnum || (JobStatus.StatusEnum = {}));
    })(JobStatus = SemanticDataInterconnectModels.JobStatus || (SemanticDataInterconnectModels.JobStatus = {}));
    /**
     * @export
     * @namespace OntologyJob
     */
    let OntologyJob;
    (function (OntologyJob) {
        /**
         * @export
         * @enum {string}
         */
        let StatusEnum;
        (function (StatusEnum) {
            StatusEnum[StatusEnum["SUBMITTED"] = "SUBMITTED"] = "SUBMITTED";
            StatusEnum[StatusEnum["INPROGRESS"] = "IN_PROGRESS"] = "INPROGRESS";
            StatusEnum[StatusEnum["ERROR"] = "ERROR"] = "ERROR";
            StatusEnum[StatusEnum["SUCCESS"] = "SUCCESS"] = "SUCCESS";
        })(StatusEnum = OntologyJob.StatusEnum || (OntologyJob.StatusEnum = {}));
    })(OntologyJob = SemanticDataInterconnectModels.OntologyJob || (SemanticDataInterconnectModels.OntologyJob = {}));
    /**
     * @export
     * @namespace SchemaSearchObject
     */
    let SchemaSearchObject;
    (function (SchemaSearchObject) {
        /**
         * @export
         * @enum {string}
         */
        let CategoryEnum;
        (function (CategoryEnum) {
            CategoryEnum[CategoryEnum["ENTERPRISE"] = "ENTERPRISE"] = "ENTERPRISE";
            CategoryEnum[CategoryEnum["IOT"] = "IOT"] = "IOT";
        })(CategoryEnum = SchemaSearchObject.CategoryEnum || (SchemaSearchObject.CategoryEnum = {}));
    })(SchemaSearchObject = SemanticDataInterconnectModels.SchemaSearchObject || (SemanticDataInterconnectModels.SchemaSearchObject = {}));
    /**
     * @export
     * @namespace SdiJobStatusResponse
     */
    let SdiJobStatusResponse;
    (function (SdiJobStatusResponse) {
        /**
         * @export
         * @enum {string}
         */
        let StatusEnum;
        (function (StatusEnum) {
            StatusEnum[StatusEnum["INPROGRESS"] = "IN_PROGRESS"] = "INPROGRESS";
            StatusEnum[StatusEnum["ERROR"] = "ERROR"] = "ERROR";
            StatusEnum[StatusEnum["STARTED"] = "STARTED"] = "STARTED";
            StatusEnum[StatusEnum["FINISHED"] = "FINISHED"] = "FINISHED";
        })(StatusEnum = SdiJobStatusResponse.StatusEnum || (SdiJobStatusResponse.StatusEnum = {}));
    })(SdiJobStatusResponse = SemanticDataInterconnectModels.SdiJobStatusResponse || (SemanticDataInterconnectModels.SdiJobStatusResponse = {}));
    /**
     * @export
     * @namespace UpdateDataRegistryRequest
     */
    let UpdateDataRegistryRequest;
    (function (UpdateDataRegistryRequest) {
        /**
         * @export
         * @enum {string}
         */
        let FileUploadStrategyEnum;
        (function (FileUploadStrategyEnum) {
            FileUploadStrategyEnum[FileUploadStrategyEnum["Append"] = "append"] = "Append";
            FileUploadStrategyEnum[FileUploadStrategyEnum["Replace"] = "replace"] = "Replace";
        })(FileUploadStrategyEnum = UpdateDataRegistryRequest.FileUploadStrategyEnum || (UpdateDataRegistryRequest.FileUploadStrategyEnum = {}));
    })(UpdateDataRegistryRequest = SemanticDataInterconnectModels.UpdateDataRegistryRequest || (SemanticDataInterconnectModels.UpdateDataRegistryRequest = {}));
})(SemanticDataInterconnectModels = exports.SemanticDataInterconnectModels || (exports.SemanticDataInterconnectModels = {}));
//# sourceMappingURL=sdi-models.js.map