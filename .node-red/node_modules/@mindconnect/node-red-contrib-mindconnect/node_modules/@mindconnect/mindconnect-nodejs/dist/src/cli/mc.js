#!/usr/bin/env node
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const commander_1 = require("commander");
const aggregates_1 = require("./commands/aggregates");
const analyze_events_1 = require("./commands/analyze-events");
const anomaly_detection_1 = require("./commands/anomaly-detection");
const aspect_commands_1 = require("./commands/aspect-commands");
const asset_info_1 = require("./commands/asset-info");
const asset_model_lock_1 = require("./commands/asset-model-lock");
const asset_types_1 = require("./commands/asset-types");
const assets_1 = require("./commands/assets");
const data_exchange_1 = require("./commands/data-exchange");
const data_lake_1 = require("./commands/data-lake");
const delete_asset_1 = require("./commands/delete-asset");
const delete_file_1 = require("./commands/delete-file");
const delivery_jobs_1 = require("./commands/delivery-jobs");
const download_events_1 = require("./commands/download-events");
const event_types_1 = require("./commands/event-types");
const events_1 = require("./commands/events");
const identity_1 = require("./commands/identity");
const iot_bulk_check_1 = require("./commands/iot-bulk-check");
const iot_bulk_run_1 = require("./commands/iot-bulk-run");
const iot_download_bulk_1 = require("./commands/iot-download-bulk");
const iot_prepare_bulk_dir_1 = require("./commands/iot-prepare-bulk-dir");
const jobmanager_jobs_1 = require("./commands/jobmanager-jobs");
const jobmanager_schedules_1 = require("./commands/jobmanager-schedules");
const kpi_calculation_1 = require("./commands/kpi-calculation");
const mc_agent_status_1 = require("./commands/mc-agent-status");
const mc_agent_token_1 = require("./commands/mc-agent-token");
const mc_automap_1 = require("./commands/mc-automap");
const mc_create_agent_1 = require("./commands/mc-create-agent");
const mc_create_event_1 = require("./commands/mc-create-event");
const mc_download_file_1 = require("./commands/mc-download-file");
const mc_get_diagnostic_1 = require("./commands/mc-get-diagnostic");
const mc_list_assets_1 = require("./commands/mc-list-assets");
const mc_list_files_1 = require("./commands/mc-list-files");
const mc_offboard_agent_1 = require("./commands/mc-offboard-agent");
const mc_onboard_1 = require("./commands/mc-onboard");
const mc_proxy_1 = require("./commands/mc-proxy");
const mc_register_diagnostic_1 = require("./commands/mc-register-diagnostic");
const mc_renew_agent_1 = require("./commands/mc-renew-agent");
const mc_service_credentials_1 = require("./commands/mc-service-credentials");
const mc_service_token_1 = require("./commands/mc-service-token");
const mc_starter_js_1 = require("./commands/mc-starter-js");
const mc_starter_ts_1 = require("./commands/mc-starter-ts");
const mc_unregister_diagnostic_1 = require("./commands/mc-unregister-diagnostic");
const mc_upload_file_1 = require("./commands/mc-upload-file");
const mc_upload_timeseries_1 = require("./commands/mc-upload-timeseries");
const mc_version_help_1 = require("./commands/mc-version-help");
const messagebroker_1 = require("./commands/messagebroker");
const mobile_app_instances_1 = require("./commands/mobile-app-instances");
const mobile_apps_1 = require("./commands/mobile-apps");
const models_1 = require("./commands/models");
const mqtt_create_jwt_1 = require("./commands/mqtt-create-jwt");
const notifications_1 = require("./commands/notifications");
const oe_app_deployment_1 = require("./commands/oe-app-deployment");
const oe_app_instance_1 = require("./commands/oe-app-instance");
const oe_deployment_workflow_1 = require("./commands/oe-deployment-workflow");
const oe_device_status_1 = require("./commands/oe-device-status");
const oe_device_types_1 = require("./commands/oe-device-types");
const oe_devices_1 = require("./commands/oe-devices");
const oe_firmware_deployment_1 = require("./commands/oe-firmware-deployment");
const policy_1 = require("./commands/policy");
const sdi_data_ingest_1 = require("./commands/sdi-data-ingest");
const sdi_data_queries_1 = require("./commands/sdi-data-queries");
const sdi_data_registries_1 = require("./commands/sdi-data-registries");
const sdi_data_types_1 = require("./commands/sdi-data-types");
const sdi_datalakes_1 = require("./commands/sdi-datalakes");
const sdi_file_upload_1 = require("./commands/sdi-file-upload");
const sdi_iot_registries_1 = require("./commands/sdi-iot-registries");
const sdi_ontologies_1 = require("./commands/sdi-ontologies");
const sdi_ontology_jobs_1 = require("./commands/sdi-ontology-jobs");
const sdi_query_execution_jobs_1 = require("./commands/sdi-query-execution-jobs");
const sdi_search_schemas_1 = require("./commands/sdi-search-schemas");
const signal_calculation_1 = require("./commands/signal-calculation");
const signal_validation_1 = require("./commands/signal-validation");
const spectrum_analysis_1 = require("./commands/spectrum-analysis");
const subtenant_1 = require("./commands/subtenant");
const tenant_1 = require("./commands/tenant");
const trend_prediction_1 = require("./commands/trend-prediction");
const program = new commander_1.Command();
// * generic commands
(0, mc_version_help_1.default)(program);
// * agent commands
(0, mc_onboard_1.default)(program);
(0, mc_automap_1.default)(program);
(0, mc_agent_token_1.default)(program);
(0, mc_upload_timeseries_1.default)(program);
// * common commands
(0, mc_upload_file_1.default)(program);
(0, mc_create_event_1.default)(program);
(0, mc_agent_status_1.default)(program);
// * setup commands
(0, mc_create_agent_1.default)(program);
(0, mc_offboard_agent_1.default)(program);
(0, mc_renew_agent_1.default)(program);
(0, mc_register_diagnostic_1.default)(program);
(0, mc_get_diagnostic_1.default)(program);
(0, mc_unregister_diagnostic_1.default)(program);
// * setup for iot bulk upload
(0, iot_prepare_bulk_dir_1.default)(program);
(0, iot_bulk_run_1.default)(program);
(0, iot_bulk_check_1.default)(program);
(0, iot_download_bulk_1.default)(program);
(0, delivery_jobs_1.default)(program);
// * assets files and event handling commands
(0, asset_model_lock_1.default)(program);
(0, asset_info_1.default)(program);
(0, assets_1.default)(program);
(0, asset_types_1.default)(program);
(0, aspect_commands_1.default)(program);
(0, event_types_1.default)(program);
(0, events_1.default)(program);
(0, download_events_1.default)(program);
(0, aggregates_1.default)(program);
(0, notifications_1.default)(program);
// * open-edge commands
(0, oe_device_types_1.default)(program);
(0, oe_devices_1.default)(program);
(0, oe_device_status_1.default)(program);
(0, oe_app_instance_1.default)(program);
(0, oe_app_deployment_1.default)(program);
(0, oe_deployment_workflow_1.default)(program);
(0, oe_firmware_deployment_1.default)(program);
// * tenant commands
(0, tenant_1.default)(program);
(0, subtenant_1.default)(program);
// * deprecated commands for 4.0.0
(0, mc_list_assets_1.default)(program);
(0, delete_asset_1.default)(program);
(0, mc_list_files_1.default)(program);
(0, mc_download_file_1.default)(program);
(0, delete_file_1.default)(program);
// * identity access management commands
(0, identity_1.default)(program);
(0, policy_1.default)(program);
(0, mc_service_credentials_1.default)(program);
(0, mc_service_token_1.default)(program);
// tokenExchangeCommand(program);
// * data lake
(0, data_lake_1.default)(program);
// sdi
(0, sdi_datalakes_1.default)(program);
(0, sdi_data_registries_1.default)(program);
(0, sdi_iot_registries_1.default)(program);
(0, sdi_data_types_1.default)(program);
(0, sdi_file_upload_1.default)(program);
(0, sdi_data_ingest_1.default)(program);
(0, sdi_search_schemas_1.default)(program);
(0, sdi_data_queries_1.default)(program);
(0, sdi_query_execution_jobs_1.default)(program);
(0, sdi_ontologies_1.default)(program);
(0, sdi_ontology_jobs_1.default)(program);
// * mobileApps
(0, mobile_apps_1.default)(program);
(0, mobile_app_instances_1.default)(program);
// * messageBroker Command
(0, messagebroker_1.default)(program);
// * analytics command
(0, spectrum_analysis_1.default)(program);
(0, signal_validation_1.default)(program);
(0, signal_calculation_1.default)(program);
(0, trend_prediction_1.default)(program);
(0, kpi_calculation_1.default)(program);
(0, analyze_events_1.default)(program);
// * models commands
(0, models_1.default)(program);
(0, jobmanager_jobs_1.default)(program);
(0, jobmanager_schedules_1.default)(program);
(0, data_exchange_1.default)(program);
// * anomaly detection commands
(0, anomaly_detection_1.default)(program);
// * dev proxy command
(0, mc_proxy_1.default)(program);
// * opcua pub sub commands
(0, mqtt_create_jwt_1.default)(program);
// * cli for starter projects
(0, mc_starter_ts_1.default)(program);
(0, mc_starter_js_1.default)(program);
program.on("command:*", function () {
    console.error("Invalid command: %s\nSee --help for a list of available commands.", program.args.join(" "));
    process.exit(1);
});
program.parse(process.argv);
if (process.argv.length < 3) {
    program.outputHelp();
}
exports.default = program;
//# sourceMappingURL=mc.js.map