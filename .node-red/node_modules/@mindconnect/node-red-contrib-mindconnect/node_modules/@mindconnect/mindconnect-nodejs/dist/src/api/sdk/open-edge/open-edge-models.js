"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.FirmwareDeploymentModels = exports.EdgeAppDeploymentModels = exports.EdgeAppInstanceModels = exports.DeploymentWorkflowModels = exports.DeviceConfigurationModels = exports.DeviceStatusModels = exports.DeviceManagementModels = void 0;
var DeviceManagementModels;
(function (DeviceManagementModels) {
    /**
     *
     * @export
     * @class RequiredError
     * @extends {Error}
     */
    class RequiredError extends Error {
        constructor(field, msg) {
            super(msg);
            this.field = field;
            this.name = "RequiredError";
        }
    }
    DeviceManagementModels.RequiredError = RequiredError;
})(DeviceManagementModels = exports.DeviceManagementModels || (exports.DeviceManagementModels = {}));
var DeviceStatusModels;
(function (DeviceStatusModels) {
    /**
     *
     * @export
     * @class RequiredError
     * @extends {Error}
     */
    class RequiredError extends Error {
        constructor(field, msg) {
            super(msg);
            this.field = field;
            this.name = "RequiredError";
        }
    }
    DeviceStatusModels.RequiredError = RequiredError;
    /**
     *
     * @export
     * @enum {string}
     */
    let HealthStatus;
    (function (HealthStatus) {
        HealthStatus[HealthStatus["OK"] = "OK"] = "OK";
        HealthStatus[HealthStatus["WARNING"] = "WARNING"] = "WARNING";
        HealthStatus[HealthStatus["ERROR"] = "ERROR"] = "ERROR";
    })(HealthStatus = DeviceStatusModels.HealthStatus || (DeviceStatusModels.HealthStatus = {}));
    /**
     * @export
     * @namespace SoftwareInventoryRecord
     */
    let SoftwareInventoryRecord;
    (function (SoftwareInventoryRecord) {
        /**
         * @export
         * @enum {string}
         */
        let SoftwareTypeEnum;
        (function (SoftwareTypeEnum) {
            SoftwareTypeEnum[SoftwareTypeEnum["FIRMWARE"] = "FIRMWARE"] = "FIRMWARE";
            SoftwareTypeEnum[SoftwareTypeEnum["APP"] = "APP"] = "APP";
        })(SoftwareTypeEnum = SoftwareInventoryRecord.SoftwareTypeEnum || (SoftwareInventoryRecord.SoftwareTypeEnum = {}));
        /**
         * @export
         * @enum {string}
         */
        let InstalledByEnum;
        (function (InstalledByEnum) {
            InstalledByEnum[InstalledByEnum["MANUAL"] = "MANUAL"] = "MANUAL";
            InstalledByEnum[InstalledByEnum["SWDEPLOY"] = "SWDEPLOY"] = "SWDEPLOY";
        })(InstalledByEnum = SoftwareInventoryRecord.InstalledByEnum || (SoftwareInventoryRecord.InstalledByEnum = {}));
    })(SoftwareInventoryRecord = DeviceStatusModels.SoftwareInventoryRecord || (DeviceStatusModels.SoftwareInventoryRecord = {}));
    /**
     * the type of software, will be extended over time with new values
     * @export
     * @enum {string}
     */
    let SoftwareType;
    (function (SoftwareType) {
        SoftwareType[SoftwareType["FIRMWARE"] = "FIRMWARE"] = "FIRMWARE";
        SoftwareType[SoftwareType["APP"] = "APP"] = "APP";
    })(SoftwareType = DeviceStatusModels.SoftwareType || (DeviceStatusModels.SoftwareType = {}));
    /**
     * the type representation of edge applications
     * @export
     * @enum {string}
     */
    let SoftwareTypeApplication;
    (function (SoftwareTypeApplication) {
        SoftwareTypeApplication[SoftwareTypeApplication["APP"] = "APP"] = "APP";
    })(SoftwareTypeApplication = DeviceStatusModels.SoftwareTypeApplication || (DeviceStatusModels.SoftwareTypeApplication = {}));
    /**
     * the type representation of firmware
     * @export
     * @enum {string}
     */
    let SoftwareTypeFirmware;
    (function (SoftwareTypeFirmware) {
        SoftwareTypeFirmware[SoftwareTypeFirmware["FIRMWARE"] = "FIRMWARE"] = "FIRMWARE";
    })(SoftwareTypeFirmware = DeviceStatusModels.SoftwareTypeFirmware || (DeviceStatusModels.SoftwareTypeFirmware = {}));
})(DeviceStatusModels = exports.DeviceStatusModels || (exports.DeviceStatusModels = {}));
var DeviceConfigurationModels;
(function (DeviceConfigurationModels) {
    /**
     *
     * @export
     * @class RequiredError
     * @extends {Error}
     */
    class RequiredError extends Error {
        constructor(field, msg) {
            super(msg);
            this.field = field;
            this.name = "RequiredError";
        }
    }
    DeviceConfigurationModels.RequiredError = RequiredError;
    /**
     * @export
     * @namespace ConfigurationStateInfo
     */
    let ConfigurationStateInfo;
    (function (ConfigurationStateInfo) {
        /**
         * @export
         * @enum {string}
         */
        let StateEnum;
        (function (StateEnum) {
            StateEnum[StateEnum["CREATED"] = "CREATED"] = "CREATED";
            StateEnum[StateEnum["CONFIGURE"] = "CONFIGURE"] = "CONFIGURE";
            StateEnum[StateEnum["CONFIGURING"] = "CONFIGURING"] = "CONFIGURING";
            StateEnum[StateEnum["CONFIGURED"] = "CONFIGURED"] = "CONFIGURED";
            StateEnum[StateEnum["CANCELED"] = "CANCELED"] = "CANCELED";
            StateEnum[StateEnum["FAILED"] = "FAILED"] = "FAILED";
        })(StateEnum = ConfigurationStateInfo.StateEnum || (ConfigurationStateInfo.StateEnum = {}));
    })(ConfigurationStateInfo = DeviceConfigurationModels.ConfigurationStateInfo || (DeviceConfigurationModels.ConfigurationStateInfo = {}));
    /**
     * @export
     * @namespace Updatetask
     */
    let Updatetask;
    (function (Updatetask) {
        /**
         * @export
         * @enum {string}
         */
        let StateEnum;
        (function (StateEnum) {
            StateEnum[StateEnum["CONFIGURING"] = "CONFIGURING"] = "CONFIGURING";
            StateEnum[StateEnum["CONFIGURED"] = "CONFIGURED"] = "CONFIGURED";
            StateEnum[StateEnum["CANCELED"] = "CANCELED"] = "CANCELED";
            StateEnum[StateEnum["FAILED"] = "FAILED"] = "FAILED";
        })(StateEnum = Updatetask.StateEnum || (Updatetask.StateEnum = {}));
    })(Updatetask = DeviceConfigurationModels.Updatetask || (DeviceConfigurationModels.Updatetask = {}));
})(DeviceConfigurationModels = exports.DeviceConfigurationModels || (exports.DeviceConfigurationModels = {}));
var DeploymentWorkflowModels;
(function (DeploymentWorkflowModels) {
    /**
     *
     * @export
     * @class RequiredError
     * @extends {Error}
     */
    class RequiredError extends Error {
        constructor(field, msg) {
            super(msg);
            this.field = field;
            this.name = "RequiredError";
        }
    }
    DeploymentWorkflowModels.RequiredError = RequiredError;
    /**
     *
     * @export
     * @enum {string}
     */
    let TransitionType;
    (function (TransitionType) {
        TransitionType[TransitionType["INSTANTANEOUS"] = "INSTANTANEOUS"] = "INSTANTANEOUS";
        TransitionType[TransitionType["BACKENDTRIGGER"] = "BACKEND_TRIGGER"] = "BACKENDTRIGGER";
        TransitionType[TransitionType["DEVICETRIGGER"] = "DEVICE_TRIGGER"] = "DEVICETRIGGER";
        TransitionType[TransitionType["BACKENDTIMETRIGGER"] = "BACKEND_TIME_TRIGGER"] = "BACKENDTIMETRIGGER";
        TransitionType[TransitionType["DEVICETIMETRIGGER"] = "DEVICE_TIME_TRIGGER"] = "DEVICETIMETRIGGER";
    })(TransitionType = DeploymentWorkflowModels.TransitionType || (DeploymentWorkflowModels.TransitionType = {}));
})(DeploymentWorkflowModels = exports.DeploymentWorkflowModels || (exports.DeploymentWorkflowModels = {}));
var EdgeAppInstanceModels;
(function (EdgeAppInstanceModels) {
    /**
     *
     * @export
     * @class RequiredError
     * @extends {Error}
     */
    class RequiredError extends Error {
        constructor(field, msg) {
            super(msg);
            this.field = field;
            this.name = "RequiredError";
        }
    }
    EdgeAppInstanceModels.RequiredError = RequiredError;
    /**
     * @export
     * @namespace ApplicationInstanceLifeCycleResource
     */
    let ApplicationInstanceLifeCycleResource;
    (function (ApplicationInstanceLifeCycleResource) {
        /**
         * @export
         * @enum {string}
         */
        let StatusEnum;
        (function (StatusEnum) {
            StatusEnum[StatusEnum["STOPPED"] = "STOPPED"] = "STOPPED";
            StatusEnum[StatusEnum["RUNNING"] = "RUNNING"] = "RUNNING";
        })(StatusEnum = ApplicationInstanceLifeCycleResource.StatusEnum || (ApplicationInstanceLifeCycleResource.StatusEnum = {}));
    })(ApplicationInstanceLifeCycleResource = EdgeAppInstanceModels.ApplicationInstanceLifeCycleResource || (EdgeAppInstanceModels.ApplicationInstanceLifeCycleResource = {}));
    /**
     * @export
     * @namespace ApplicationInstanceLifeCycleStatus
     */
    let ApplicationInstanceLifeCycleStatus;
    (function (ApplicationInstanceLifeCycleStatus) {
        /**
         * @export
         * @enum {string}
         */
        let StatusEnum;
        (function (StatusEnum) {
            StatusEnum[StatusEnum["STOPPED"] = "STOPPED"] = "STOPPED";
            StatusEnum[StatusEnum["RUNNING"] = "RUNNING"] = "RUNNING";
        })(StatusEnum = ApplicationInstanceLifeCycleStatus.StatusEnum || (ApplicationInstanceLifeCycleStatus.StatusEnum = {}));
    })(ApplicationInstanceLifeCycleStatus = EdgeAppInstanceModels.ApplicationInstanceLifeCycleStatus || (EdgeAppInstanceModels.ApplicationInstanceLifeCycleStatus = {}));
    /**
     * @export
     * @namespace ApplicationInstanceResource
     */
    let ApplicationInstanceResource;
    (function (ApplicationInstanceResource) {
        /**
         * @export
         * @enum {string}
         */
        let StatusEnum;
        (function (StatusEnum) {
            StatusEnum[StatusEnum["STOPPED"] = "STOPPED"] = "STOPPED";
            StatusEnum[StatusEnum["RUNNING"] = "RUNNING"] = "RUNNING";
        })(StatusEnum = ApplicationInstanceResource.StatusEnum || (ApplicationInstanceResource.StatusEnum = {}));
    })(ApplicationInstanceResource = EdgeAppInstanceModels.ApplicationInstanceResource || (EdgeAppInstanceModels.ApplicationInstanceResource = {}));
})(EdgeAppInstanceModels = exports.EdgeAppInstanceModels || (exports.EdgeAppInstanceModels = {}));
var EdgeAppDeploymentModels;
(function (EdgeAppDeploymentModels) {
    /**
     *
     * @export
     */
    EdgeAppDeploymentModels.COLLECTION_FORMATS = {
        csv: ",",
        ssv: " ",
        tsv: "\t",
        pipes: "|",
    };
    /**
     *
     * @export
     * @class RequiredError
     * @extends {Error}
     */
    class RequiredError extends Error {
        constructor(field, msg) {
            super(msg);
            this.field = field;
            this.name = "RequiredError";
        }
    }
    EdgeAppDeploymentModels.RequiredError = RequiredError;
    /**
     * @export
     * @namespace TaskResource
     */
    let TaskResource;
    (function (TaskResource) {
        /**
         * @export
         * @enum {string}
         */
        let SoftwareTypeEnum;
        (function (SoftwareTypeEnum) {
            SoftwareTypeEnum[SoftwareTypeEnum["APP"] = "APP"] = "APP";
        })(SoftwareTypeEnum = TaskResource.SoftwareTypeEnum || (TaskResource.SoftwareTypeEnum = {}));
    })(TaskResource = EdgeAppDeploymentModels.TaskResource || (EdgeAppDeploymentModels.TaskResource = {}));
    /**
     * @export
     * @namespace TaskStatus
     */
    let TaskStatus;
    (function (TaskStatus) {
        /**
         * @export
         * @enum {string}
         */
        let StateEnum;
        (function (StateEnum) {
            StateEnum[StateEnum["DOWNLOAD"] = "DOWNLOAD"] = "DOWNLOAD";
            StateEnum[StateEnum["INSTALL"] = "INSTALL"] = "INSTALL";
            StateEnum[StateEnum["ACTIVATE"] = "ACTIVATE"] = "ACTIVATE";
            StateEnum[StateEnum["CANCELED"] = "CANCELED"] = "CANCELED";
            StateEnum[StateEnum["FAILED"] = "FAILED"] = "FAILED";
        })(StateEnum = TaskStatus.StateEnum || (TaskStatus.StateEnum = {}));
    })(TaskStatus = EdgeAppDeploymentModels.TaskStatus || (EdgeAppDeploymentModels.TaskStatus = {}));
})(EdgeAppDeploymentModels = exports.EdgeAppDeploymentModels || (exports.EdgeAppDeploymentModels = {}));
var FirmwareDeploymentModels;
(function (FirmwareDeploymentModels) {
    /**
     *
     * @export
     */
    FirmwareDeploymentModels.COLLECTION_FORMATS = {
        csv: ",",
        ssv: " ",
        tsv: "\t",
        pipes: "|",
    };
    /**
     *
     * @export
     * @class RequiredError
     * @extends {Error}
     */
    class RequiredError extends Error {
        constructor(field, msg) {
            super(msg);
            this.field = field;
            this.name = "RequiredError";
        }
    }
    FirmwareDeploymentModels.RequiredError = RequiredError;
    /**
     * @export
     * @namespace InstallationStateInfo
     */
    let InstallationStateInfo;
    (function (InstallationStateInfo) {
        /**
         * @export
         * @enum {string}
         */
        let StateEnum;
        (function (StateEnum) {
            StateEnum[StateEnum["CREATED"] = "CREATED"] = "CREATED";
            StateEnum[StateEnum["DOWNLOAD"] = "DOWNLOAD"] = "DOWNLOAD";
            StateEnum[StateEnum["DOWNLOADING"] = "DOWNLOADING"] = "DOWNLOADING";
            StateEnum[StateEnum["DOWNLOADED"] = "DOWNLOADED"] = "DOWNLOADED";
            StateEnum[StateEnum["INSTALL"] = "INSTALL"] = "INSTALL";
            StateEnum[StateEnum["INSTALLING"] = "INSTALLING"] = "INSTALLING";
            StateEnum[StateEnum["INSTALLED"] = "INSTALLED"] = "INSTALLED";
            StateEnum[StateEnum["ACTIVATE"] = "ACTIVATE"] = "ACTIVATE";
            StateEnum[StateEnum["ACTIVATING"] = "ACTIVATING"] = "ACTIVATING";
            StateEnum[StateEnum["ACTIVATED"] = "ACTIVATED"] = "ACTIVATED";
            StateEnum[StateEnum["CANCELED"] = "CANCELED"] = "CANCELED";
            StateEnum[StateEnum["FAILED"] = "FAILED"] = "FAILED";
        })(StateEnum = InstallationStateInfo.StateEnum || (InstallationStateInfo.StateEnum = {}));
    })(InstallationStateInfo = FirmwareDeploymentModels.InstallationStateInfo || (FirmwareDeploymentModels.InstallationStateInfo = {}));
    /**
     * @export
     * @namespace InstallationTask
     */
    let InstallationTask;
    (function (InstallationTask) {
        /**
         * @export
         * @enum {string}
         */
        let SoftwareTypeEnum;
        (function (SoftwareTypeEnum) {
            SoftwareTypeEnum[SoftwareTypeEnum["FIRMWARE"] = "FIRMWARE"] = "FIRMWARE";
            SoftwareTypeEnum[SoftwareTypeEnum["APP"] = "APP"] = "APP";
        })(SoftwareTypeEnum = InstallationTask.SoftwareTypeEnum || (InstallationTask.SoftwareTypeEnum = {}));
        /**
         * @export
         * @enum {string}
         */
        let ActionTypeEnum;
        (function (ActionTypeEnum) {
            ActionTypeEnum[ActionTypeEnum["INSTALL"] = "INSTALL"] = "INSTALL";
            ActionTypeEnum[ActionTypeEnum["REMOVE"] = "REMOVE"] = "REMOVE";
        })(ActionTypeEnum = InstallationTask.ActionTypeEnum || (InstallationTask.ActionTypeEnum = {}));
    })(InstallationTask = FirmwareDeploymentModels.InstallationTask || (FirmwareDeploymentModels.InstallationTask = {}));
    /**
     * @export
     * @namespace InstallationTaskInfo
     */
    let InstallationTaskInfo;
    (function (InstallationTaskInfo) {
        /**
         * @export
         * @enum {string}
         */
        let SoftwareTypeEnum;
        (function (SoftwareTypeEnum) {
            SoftwareTypeEnum[SoftwareTypeEnum["FIRMWARE"] = "FIRMWARE"] = "FIRMWARE";
            SoftwareTypeEnum[SoftwareTypeEnum["APP"] = "APP"] = "APP";
        })(SoftwareTypeEnum = InstallationTaskInfo.SoftwareTypeEnum || (InstallationTaskInfo.SoftwareTypeEnum = {}));
    })(InstallationTaskInfo = FirmwareDeploymentModels.InstallationTaskInfo || (FirmwareDeploymentModels.InstallationTaskInfo = {}));
    /**
     * @export
     * @namespace TaskUpdate
     */
    let TaskUpdate;
    (function (TaskUpdate) {
        /**
         * @export
         * @enum {string}
         */
        let StateEnum;
        (function (StateEnum) {
            StateEnum[StateEnum["CREATED"] = "CREATED"] = "CREATED";
            StateEnum[StateEnum["DOWNLOAD"] = "DOWNLOAD"] = "DOWNLOAD";
            StateEnum[StateEnum["DOWNLOADING"] = "DOWNLOADING"] = "DOWNLOADING";
            StateEnum[StateEnum["DOWNLOADED"] = "DOWNLOADED"] = "DOWNLOADED";
            StateEnum[StateEnum["INSTALL"] = "INSTALL"] = "INSTALL";
            StateEnum[StateEnum["INSTALLING"] = "INSTALLING"] = "INSTALLING";
            StateEnum[StateEnum["INSTALLED"] = "INSTALLED"] = "INSTALLED";
            StateEnum[StateEnum["ACTIVATE"] = "ACTIVATE"] = "ACTIVATE";
            StateEnum[StateEnum["ACTIVATING"] = "ACTIVATING"] = "ACTIVATING";
            StateEnum[StateEnum["ACTIVATED"] = "ACTIVATED"] = "ACTIVATED";
            StateEnum[StateEnum["CANCELED"] = "CANCELED"] = "CANCELED";
            StateEnum[StateEnum["FAILED"] = "FAILED"] = "FAILED";
        })(StateEnum = TaskUpdate.StateEnum || (TaskUpdate.StateEnum = {}));
    })(TaskUpdate = FirmwareDeploymentModels.TaskUpdate || (FirmwareDeploymentModels.TaskUpdate = {}));
    /**
     * @export
     * @namespace Transition
     */
    let Transition;
    (function (Transition) {
        /**
         * @export
         * @enum {string}
         */
        let FromEnum;
        (function (FromEnum) {
            FromEnum[FromEnum["CREATED"] = "CREATED"] = "CREATED";
            FromEnum[FromEnum["DOWNLOAD"] = "DOWNLOAD"] = "DOWNLOAD";
            FromEnum[FromEnum["DOWNLOADING"] = "DOWNLOADING"] = "DOWNLOADING";
            FromEnum[FromEnum["DOWNLOADED"] = "DOWNLOADED"] = "DOWNLOADED";
            FromEnum[FromEnum["INSTALL"] = "INSTALL"] = "INSTALL";
            FromEnum[FromEnum["INSTALLING"] = "INSTALLING"] = "INSTALLING";
            FromEnum[FromEnum["INSTALLED"] = "INSTALLED"] = "INSTALLED";
            FromEnum[FromEnum["ACTIVATE"] = "ACTIVATE"] = "ACTIVATE";
            FromEnum[FromEnum["ACTIVATING"] = "ACTIVATING"] = "ACTIVATING";
            FromEnum[FromEnum["ACTIVATED"] = "ACTIVATED"] = "ACTIVATED";
            FromEnum[FromEnum["CANCELED"] = "CANCELED"] = "CANCELED";
            FromEnum[FromEnum["FAILED"] = "FAILED"] = "FAILED";
        })(FromEnum = Transition.FromEnum || (Transition.FromEnum = {}));
        /**
         * @export
         * @enum {string}
         */
        let ToEnum;
        (function (ToEnum) {
            ToEnum[ToEnum["CREATED"] = "CREATED"] = "CREATED";
            ToEnum[ToEnum["DOWNLOAD"] = "DOWNLOAD"] = "DOWNLOAD";
            ToEnum[ToEnum["DOWNLOADING"] = "DOWNLOADING"] = "DOWNLOADING";
            ToEnum[ToEnum["DOWNLOADED"] = "DOWNLOADED"] = "DOWNLOADED";
            ToEnum[ToEnum["INSTALL"] = "INSTALL"] = "INSTALL";
            ToEnum[ToEnum["INSTALLING"] = "INSTALLING"] = "INSTALLING";
            ToEnum[ToEnum["INSTALLED"] = "INSTALLED"] = "INSTALLED";
            ToEnum[ToEnum["ACTIVATE"] = "ACTIVATE"] = "ACTIVATE";
            ToEnum[ToEnum["ACTIVATING"] = "ACTIVATING"] = "ACTIVATING";
            ToEnum[ToEnum["ACTIVATED"] = "ACTIVATED"] = "ACTIVATED";
            ToEnum[ToEnum["CANCELED"] = "CANCELED"] = "CANCELED";
            ToEnum[ToEnum["FAILED"] = "FAILED"] = "FAILED";
        })(ToEnum = Transition.ToEnum || (Transition.ToEnum = {}));
    })(Transition = FirmwareDeploymentModels.Transition || (FirmwareDeploymentModels.Transition = {}));
})(FirmwareDeploymentModels = exports.FirmwareDeploymentModels || (exports.FirmwareDeploymentModels = {}));
//# sourceMappingURL=open-edge-models.js.map