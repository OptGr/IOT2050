"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const sdk_1 = require("../src/api/sdk");
const utils_1 = require("../src/api/utils");
const test_utils_1 = require("./test-utils");
describe("[SDK] UsageTransparencyClient", () => {
    const auth = (0, utils_1.loadAuth)();
    const sdk = new sdk_1.MindSphereSdk(Object.assign(Object.assign({}, auth), { basicAuth: (0, utils_1.decrypt)(auth, (0, test_utils_1.getPasskeyForUnitTest)()) }));
    it("should instantiate", () => __awaiter(void 0, void 0, void 0, function* () {
        const client = sdk.GetUsageTransparencyClient();
        client.should.not.be.undefined;
    }));
    it("should post some usage data", () => __awaiter(void 0, void 0, void 0, function* () {
        const client = sdk.GetUsageTransparencyClient();
        yield client.PostUsages({
            CustomerTenantID: client.GetTenant(),
            CustomerUserID: "sn0wcat@some.domain",
            UTSUsageData: [
                {
                    resourceAlias: "sdk-unit-test",
                    resourceName: "sdk-test-resource",
                    UsageData: [
                        {
                            usage: 20,
                            usageUnit: "imperialParsecs",
                            usageDate: new Date().toISOString(),
                        },
                    ],
                },
            ],
        });
    }));
});
//# sourceMappingURL=utc.spec.js.map